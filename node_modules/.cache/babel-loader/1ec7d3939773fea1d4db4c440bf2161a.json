{"ast":null,"code":"\"use strict\";\n\nimport stream from \"stream\";\n\nclass ZlibHeaderTransformStream extends stream.Transform {\n  __transform(chunk, encoding, callback) {\n    this.push(chunk);\n    callback();\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (chunk.length !== 0) {\n      this._transform = this.__transform; // Add Default Compression headers if no zlib headers are present\n\n      if (chunk[0] !== 120) {\n        // Hex: 78\n        const header = Buffer.alloc(2);\n        header[0] = 120; // Hex: 78\n\n        header[1] = 156; // Hex: 9C \n\n        this.push(header, encoding);\n      }\n    }\n\n    this.__transform(chunk, encoding, callback);\n  }\n\n}\n\nexport default ZlibHeaderTransformStream;","map":{"version":3,"sources":["/Users/pranavvuddagiri/Desktop/minorhome/node_modules/axios/lib/helpers/ZlibHeaderTransformStream.js"],"names":["stream","ZlibHeaderTransformStream","Transform","__transform","chunk","encoding","callback","push","_transform","length","header","Buffer","alloc"],"mappings":"AAAA;;AAEA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,yBAAN,SAAwCD,MAAM,CAACE,SAA/C,CAAyD;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4B;AACrC,SAAKC,IAAL,CAAUH,KAAV;AACAE,IAAAA,QAAQ;AACT;;AAEDE,EAAAA,UAAU,CAACJ,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4B;AACpC,QAAIF,KAAK,CAACK,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAKD,UAAL,GAAkB,KAAKL,WAAvB,CADsB,CAGtB;;AACA,UAAIC,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;AAAE;AACtB,cAAMM,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAa,CAAb,CAAf;AACAF,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,GAAZ,CAFoB,CAEH;;AACjBA,QAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,GAAZ,CAHoB,CAGH;;AACjB,aAAKH,IAAL,CAAUG,MAAV,EAAkBL,QAAlB;AACD;AACF;;AAED,SAAKF,WAAL,CAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,QAAlC;AACD;;AApBsD;;AAuBzD,eAAeL,yBAAf","sourcesContent":["\"use strict\";\n\nimport stream from \"stream\";\n\nclass ZlibHeaderTransformStream extends stream.Transform {\n  __transform(chunk, encoding, callback) {\n    this.push(chunk);\n    callback();\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (chunk.length !== 0) {\n      this._transform = this.__transform;\n\n      // Add Default Compression headers if no zlib headers are present\n      if (chunk[0] !== 120) { // Hex: 78\n        const header = Buffer.alloc(2);\n        header[0] = 120; // Hex: 78\n        header[1] = 156; // Hex: 9C \n        this.push(header, encoding);\n      }\n    }\n\n    this.__transform(chunk, encoding, callback);\n  }\n}\n\nexport default ZlibHeaderTransformStream;\n"]},"metadata":{},"sourceType":"module"}
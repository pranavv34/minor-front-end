{"ast":null,"code":"\"use client\";\n\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useMessage from '../message/useMessage';\nimport useModal from '../modal/useModal';\nimport useNotification from '../notification/useNotification';\nimport AppContext, { AppConfigContext } from './context';\nimport useStyle from './style';\n\nconst useApp = () => React.useContext(AppContext);\n\nconst App = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    children,\n    className,\n    rootClassName,\n    message,\n    notification,\n    style,\n    component = 'div'\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('app', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const customClassName = classNames(hashId, prefixCls, className, rootClassName);\n  const appConfig = useContext(AppConfigContext);\n  const mergedAppConfig = React.useMemo(() => ({\n    message: Object.assign(Object.assign({}, appConfig.message), message),\n    notification: Object.assign(Object.assign({}, appConfig.notification), notification)\n  }), [message, notification, appConfig.message, appConfig.notification]);\n  const [messageApi, messageContextHolder] = useMessage(mergedAppConfig.message);\n  const [notificationApi, notificationContextHolder] = useNotification(mergedAppConfig.notification);\n  const [ModalApi, ModalContextHolder] = useModal();\n  const memoizedContextValue = React.useMemo(() => ({\n    message: messageApi,\n    notification: notificationApi,\n    modal: ModalApi\n  }), [messageApi, notificationApi, ModalApi]); // ============================ Render ============================\n\n  const Component = component === false ? React.Fragment : component;\n  const rootProps = {\n    className: customClassName,\n    style\n  };\n  return wrapSSR( /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: memoizedContextValue\n  }, /*#__PURE__*/React.createElement(AppConfigContext.Provider, {\n    value: mergedAppConfig\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({}, component === false ? undefined : rootProps), ModalContextHolder, messageContextHolder, notificationContextHolder, children))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  App.displayName = 'App';\n}\n\nApp.useApp = useApp;\nexport default App;","map":{"version":3,"sources":["/Users/pranavvuddagiri/Desktop/minorhome2/node_modules/antd/es/app/index.js"],"names":["React","useContext","classNames","ConfigContext","useMessage","useModal","useNotification","AppContext","AppConfigContext","useStyle","useApp","App","props","prefixCls","customizePrefixCls","children","className","rootClassName","message","notification","style","component","getPrefixCls","wrapSSR","hashId","customClassName","appConfig","mergedAppConfig","useMemo","Object","assign","messageApi","messageContextHolder","notificationApi","notificationContextHolder","ModalApi","ModalContextHolder","memoizedContextValue","modal","Component","Fragment","rootProps","createElement","Provider","value","undefined","process","env","NODE_ENV","displayName"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { ConfigContext } from '../config-provider';\nimport useMessage from '../message/useMessage';\nimport useModal from '../modal/useModal';\nimport useNotification from '../notification/useNotification';\nimport AppContext, { AppConfigContext } from './context';\nimport useStyle from './style';\nconst useApp = () => React.useContext(AppContext);\nconst App = props => {\n  const {\n    prefixCls: customizePrefixCls,\n    children,\n    className,\n    rootClassName,\n    message,\n    notification,\n    style,\n    component = 'div'\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('app', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const customClassName = classNames(hashId, prefixCls, className, rootClassName);\n  const appConfig = useContext(AppConfigContext);\n  const mergedAppConfig = React.useMemo(() => ({\n    message: Object.assign(Object.assign({}, appConfig.message), message),\n    notification: Object.assign(Object.assign({}, appConfig.notification), notification)\n  }), [message, notification, appConfig.message, appConfig.notification]);\n  const [messageApi, messageContextHolder] = useMessage(mergedAppConfig.message);\n  const [notificationApi, notificationContextHolder] = useNotification(mergedAppConfig.notification);\n  const [ModalApi, ModalContextHolder] = useModal();\n  const memoizedContextValue = React.useMemo(() => ({\n    message: messageApi,\n    notification: notificationApi,\n    modal: ModalApi\n  }), [messageApi, notificationApi, ModalApi]);\n  // ============================ Render ============================\n  const Component = component === false ? React.Fragment : component;\n  const rootProps = {\n    className: customClassName,\n    style\n  };\n  return wrapSSR( /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: memoizedContextValue\n  }, /*#__PURE__*/React.createElement(AppConfigContext.Provider, {\n    value: mergedAppConfig\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({}, component === false ? undefined : rootProps), ModalContextHolder, messageContextHolder, notificationContextHolder, children))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  App.displayName = 'App';\n}\nApp.useApp = useApp;\nexport default App;"]},"metadata":{},"sourceType":"module"}
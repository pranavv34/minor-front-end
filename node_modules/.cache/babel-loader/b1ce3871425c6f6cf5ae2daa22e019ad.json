{"ast":null,"code":"'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport buildURL from './../helpers/buildURL.js';\nimport { getProxyForUrl } from 'proxy-from-env';\nimport http from 'http';\nimport https from 'https';\nimport util from 'util';\nimport followRedirects from 'follow-redirects';\nimport zlib from 'zlib';\nimport { VERSION } from '../env/data.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport platform from '../platform/index.js';\nimport fromDataURI from '../helpers/fromDataURI.js';\nimport stream from 'stream';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport AxiosTransformStream from '../helpers/AxiosTransformStream.js';\nimport EventEmitter from 'events';\nimport formDataToStream from \"../helpers/formDataToStream.js\";\nimport readBlob from \"../helpers/readBlob.js\";\nimport ZlibHeaderTransformStream from '../helpers/ZlibHeaderTransformStream.js';\nimport callbackify from \"../helpers/callbackify.js\";\nconst zlibOptions = {\n  flush: zlib.constants.Z_SYNC_FLUSH,\n  finishFlush: zlib.constants.Z_SYNC_FLUSH\n};\nconst brotliOptions = {\n  flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n  finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH\n};\nconst isBrotliSupported = utils.isFunction(zlib.createBrotliDecompress);\nconst {\n  http: httpFollow,\n  https: httpsFollow\n} = followRedirects;\nconst isHttps = /https:?/;\nconst supportedProtocols = platform.protocols.map(protocol => {\n  return protocol + ':';\n});\n/**\n * If the proxy or config beforeRedirects functions are defined, call them with the options\n * object.\n *\n * @param {Object<string, any>} options - The options object that was passed to the request.\n *\n * @returns {Object<string, any>}\n */\n\nfunction dispatchBeforeRedirect(options) {\n  if (options.beforeRedirects.proxy) {\n    options.beforeRedirects.proxy(options);\n  }\n\n  if (options.beforeRedirects.config) {\n    options.beforeRedirects.config(options);\n  }\n}\n/**\n * If the proxy or config afterRedirects functions are defined, call them with the options\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} configProxy configuration from Axios options object\n * @param {string} location\n *\n * @returns {http.ClientRequestArgs}\n */\n\n\nfunction setProxy(options, configProxy, location) {\n  let proxy = configProxy;\n\n  if (!proxy && proxy !== false) {\n    const proxyUrl = getProxyForUrl(location);\n\n    if (proxyUrl) {\n      proxy = new URL(proxyUrl);\n    }\n  }\n\n  if (proxy) {\n    // Basic proxy authorization\n    if (proxy.username) {\n      proxy.auth = (proxy.username || '') + ':' + (proxy.password || '');\n    }\n\n    if (proxy.auth) {\n      // Support proxy auth object form\n      if (proxy.auth.username || proxy.auth.password) {\n        proxy.auth = (proxy.auth.username || '') + ':' + (proxy.auth.password || '');\n      }\n\n      const base64 = Buffer.from(proxy.auth, 'utf8').toString('base64');\n      options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n    }\n\n    options.headers.host = options.hostname + (options.port ? ':' + options.port : '');\n    const proxyHost = proxy.hostname || proxy.host;\n    options.hostname = proxyHost; // Replace 'host' since options is not a URL object\n\n    options.host = proxyHost;\n    options.port = proxy.port;\n    options.path = location;\n\n    if (proxy.protocol) {\n      options.protocol = proxy.protocol.includes(':') ? proxy.protocol : `${proxy.protocol}:`;\n    }\n  }\n\n  options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {\n    // Configure proxy for redirected request, passing the original config proxy to apply\n    // the exact same logic as if the redirected request was performed by axios directly.\n    setProxy(redirectOptions, configProxy, redirectOptions.href);\n  };\n}\n\nconst isHttpAdapterSupported = typeof process !== 'undefined' && utils.kindOf(process) === 'process'; // temporary hotfix\n\nconst wrapAsync = asyncExecutor => {\n  return new Promise((resolve, reject) => {\n    let onDone;\n    let isDone;\n\n    const done = (value, isRejected) => {\n      if (isDone) return;\n      isDone = true;\n      onDone && onDone(value, isRejected);\n    };\n\n    const _resolve = value => {\n      done(value);\n      resolve(value);\n    };\n\n    const _reject = reason => {\n      done(reason, true);\n      reject(reason);\n    };\n\n    asyncExecutor(_resolve, _reject, onDoneHandler => onDone = onDoneHandler).catch(_reject);\n  });\n};\n\nconst resolveFamily = _ref => {\n  let {\n    address,\n    family\n  } = _ref;\n\n  if (!utils.isString(address)) {\n    throw TypeError('address must be a string');\n  }\n\n  return {\n    address,\n    family: family || (address.indexOf('.') < 0 ? 6 : 4)\n  };\n};\n\nconst buildAddressEntry = (address, family) => resolveFamily(utils.isObject(address) ? address : {\n  address,\n  family\n});\n/*eslint consistent-return:0*/\n\n\nexport default isHttpAdapterSupported && function httpAdapter(config) {\n  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {\n      data,\n      lookup,\n      family\n    } = config;\n    const {\n      responseType,\n      responseEncoding\n    } = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup) {\n      const _lookup = callbackify(lookup, value => utils.isArray(value) ? value : [value]); // hotfix to support opt.all option which is required for node 20.x\n\n\n      lookup = (hostname, opt, cb) => {\n        _lookup(hostname, opt, (err, arg0, arg1) => {\n          const addresses = utils.isArray(arg0) ? arg0.map(addr => buildAddressEntry(addr)) : [buildAddressEntry(arg0, arg1)];\n          opt.all ? cb(err, addresses) : cb(err, addresses[0].address, addresses[0].family);\n        });\n      };\n    } // temporary internal emitter until the AxiosRequest class will be implemented\n\n\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', abort);\n      }\n\n      emitter.removeAllListeners();\n    };\n\n    onDone((value, isRejected) => {\n      isDone = true;\n\n      if (isRejected) {\n        rejected = true;\n        onFinished();\n      }\n    });\n\n    function abort(reason) {\n      emitter.emit('abort', !reason || reason.type ? new CanceledError(null, config, req) : reason);\n    }\n\n    emitter.once('abort', reject);\n\n    if (config.cancelToken || config.signal) {\n      config.cancelToken && config.cancelToken.subscribe(abort);\n\n      if (config.signal) {\n        config.signal.aborted ? abort() : config.signal.addEventListener('abort', abort);\n      }\n    } // Parse url\n\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    const parsed = new URL(fullPath, 'http://localhost');\n    const protocol = parsed.protocol || supportedProtocols[0];\n\n    if (protocol === 'data:') {\n      let convertedData;\n\n      if (method !== 'GET') {\n        return settle(resolve, reject, {\n          status: 405,\n          statusText: 'method not allowed',\n          headers: {},\n          config\n        });\n      }\n\n      try {\n        convertedData = fromDataURI(config.url, responseType === 'blob', {\n          Blob: config.env && config.env.Blob\n        });\n      } catch (err) {\n        throw AxiosError.from(err, AxiosError.ERR_BAD_REQUEST, config);\n      }\n\n      if (responseType === 'text') {\n        convertedData = convertedData.toString(responseEncoding);\n\n        if (!responseEncoding || responseEncoding === 'utf8') {\n          convertedData = utils.stripBOM(convertedData);\n        }\n      } else if (responseType === 'stream') {\n        convertedData = stream.Readable.from(convertedData);\n      }\n\n      return settle(resolve, reject, {\n        data: convertedData,\n        status: 200,\n        statusText: 'OK',\n        headers: new AxiosHeaders(),\n        config\n      });\n    }\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError('Unsupported protocol ' + protocol, AxiosError.ERR_BAD_REQUEST, config));\n    }\n\n    const headers = AxiosHeaders.from(config.headers).normalize(); // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    // User-Agent is specified; handle case where no UA header is desired\n    // Only set header if it hasn't been set in config\n\n    headers.set('User-Agent', 'axios/' + VERSION, false);\n    const onDownloadProgress = config.onDownloadProgress;\n    const onUploadProgress = config.onUploadProgress;\n    const maxRate = config.maxRate;\n    let maxUploadRate = undefined;\n    let maxDownloadRate = undefined; // support for spec compliant FormData objects\n\n    if (utils.isSpecCompliantForm(data)) {\n      const userBoundary = headers.getContentType(/boundary=([-_\\w\\d]{10,70})/i);\n      data = formDataToStream(data, formHeaders => {\n        headers.set(formHeaders);\n      }, {\n        tag: `axios-${VERSION}-boundary`,\n        boundary: userBoundary && userBoundary[1] || undefined\n      }); // support for https://www.npmjs.com/package/form-data api\n    } else if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      headers.set(data.getHeaders());\n\n      if (!headers.hasContentLength()) {\n        try {\n          const knownLength = await util.promisify(data.getLength).call(data);\n          Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);\n          /*eslint no-empty:0*/\n        } catch (e) {}\n      }\n    } else if (utils.isBlob(data)) {\n      data.size && headers.setContentType(data.type || 'application/octet-stream');\n      headers.setContentLength(data.size || 0);\n      data = stream.Readable.from(readBlob(data));\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {// Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError('Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream', AxiosError.ERR_BAD_REQUEST, config));\n      } // Add Content-Length header if data exists\n\n\n      headers.setContentLength(data.length, false);\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError('Request body larger than maxBodyLength limit', AxiosError.ERR_BAD_REQUEST, config));\n      }\n    }\n\n    const contentLength = utils.toFiniteNumber(headers.getContentLength());\n\n    if (utils.isArray(maxRate)) {\n      maxUploadRate = maxRate[0];\n      maxDownloadRate = maxRate[1];\n    } else {\n      maxUploadRate = maxDownloadRate = maxRate;\n    }\n\n    if (data && (onUploadProgress || maxUploadRate)) {\n      if (!utils.isStream(data)) {\n        data = stream.Readable.from(data, {\n          objectMode: false\n        });\n      }\n\n      data = stream.pipeline([data, new AxiosTransformStream({\n        length: contentLength,\n        maxRate: utils.toFiniteNumber(maxUploadRate)\n      })], utils.noop);\n      onUploadProgress && data.on('progress', progress => {\n        onUploadProgress(Object.assign(progress, {\n          upload: true\n        }));\n      });\n    } // HTTP basic authentication\n\n\n    let auth = undefined;\n\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    if (!auth && parsed.username) {\n      const urlUsername = parsed.username;\n      const urlPassword = parsed.password;\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    auth && headers.delete('authorization');\n    let path;\n\n    try {\n      path = buildURL(parsed.pathname + parsed.search, config.params, config.paramsSerializer).replace(/^\\?/, '');\n    } catch (err) {\n      const customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      return reject(customErr);\n    }\n\n    headers.set('Accept-Encoding', 'gzip, compress, deflate' + (isBrotliSupported ? ', br' : ''), false);\n    const options = {\n      path,\n      method: method,\n      headers: headers.toJSON(),\n      agents: {\n        http: config.httpAgent,\n        https: config.httpsAgent\n      },\n      auth,\n      protocol,\n      family,\n      beforeRedirect: dispatchBeforeRedirect,\n      beforeRedirects: {}\n    }; // cacheable-lookup integration hotfix\n\n    !utils.isUndefined(lookup) && (options.lookup = lookup);\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n      setProxy(options, config.proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    let transport;\n    const isHttpsRequest = isHttps.test(options.protocol);\n    options.agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsRequest ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n\n      if (config.beforeRedirect) {\n        options.beforeRedirects.config = config.beforeRedirect;\n      }\n\n      transport = isHttpsRequest ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    } else {\n      // follow-redirects does not skip comparison, so it should always succeed for axios -1 unlimited\n      options.maxBodyLength = Infinity;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    } // Create the request\n\n\n    req = transport.request(options, function handleResponse(res) {\n      if (req.destroyed) return;\n      const streams = [res];\n      const responseLength = +res.headers['content-length'];\n\n      if (onDownloadProgress) {\n        const transformStream = new AxiosTransformStream({\n          length: utils.toFiniteNumber(responseLength),\n          maxRate: utils.toFiniteNumber(maxDownloadRate)\n        });\n        onDownloadProgress && transformStream.on('progress', progress => {\n          onDownloadProgress(Object.assign(progress, {\n            download: true\n          }));\n        });\n        streams.push(transformStream);\n      } // decompress the response body transparently if required\n\n\n      let responseStream = res; // return the last request in case of redirects\n\n      const lastRequest = res.req || req; // if decompress disabled we should not decompress\n\n      if (config.decompress !== false && res.headers['content-encoding']) {\n        // if no content, but headers still say that it is encoded,\n        // remove the header not confuse downstream operations\n        if (method === 'HEAD' || res.statusCode === 204) {\n          delete res.headers['content-encoding'];\n        }\n\n        switch ((res.headers['content-encoding'] || '').toLowerCase()) {\n          /*eslint default-case:0*/\n          case 'gzip':\n          case 'x-gzip':\n          case 'compress':\n          case 'x-compress':\n            // add the unzipper to the body stream processing pipeline\n            streams.push(zlib.createUnzip(zlibOptions)); // remove the content-encoding in order to not confuse downstream operations\n\n            delete res.headers['content-encoding'];\n            break;\n\n          case 'deflate':\n            streams.push(new ZlibHeaderTransformStream()); // add the unzipper to the body stream processing pipeline\n\n            streams.push(zlib.createUnzip(zlibOptions)); // remove the content-encoding in order to not confuse downstream operations\n\n            delete res.headers['content-encoding'];\n            break;\n\n          case 'br':\n            if (isBrotliSupported) {\n              streams.push(zlib.createBrotliDecompress(brotliOptions));\n              delete res.headers['content-encoding'];\n            }\n\n        }\n      }\n\n      responseStream = streams.length > 1 ? stream.pipeline(streams, utils.noop) : streams[0];\n      const offListeners = stream.finished(responseStream, () => {\n        offListeners();\n        onFinished();\n      });\n      const response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: new AxiosHeaders(res.headers),\n        config,\n        request: lastRequest\n      };\n\n      if (responseType === 'stream') {\n        response.data = responseStream;\n        settle(resolve, reject, response);\n      } else {\n        const responseBuffer = [];\n        let totalResponseBytes = 0;\n        responseStream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length; // make sure the content length is not over the maxContentLength if specified\n\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destroy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            responseStream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded', AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n        responseStream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          const err = new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded', AxiosError.ERR_BAD_RESPONSE, config, lastRequest);\n          responseStream.destroy(err);\n          reject(err);\n        });\n        responseStream.on('error', function handleStreamError(err) {\n          if (req.destroyed) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n        responseStream.on('end', function handleStreamEnd() {\n          try {\n            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n\n            if (responseType !== 'arraybuffer') {\n              responseData = responseData.toString(responseEncoding);\n\n              if (!responseEncoding || responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n\n            response.data = responseData;\n          } catch (err) {\n            return reject(AxiosError.from(err, null, config, response.request, response));\n          }\n\n          settle(resolve, reject, response);\n        });\n      }\n\n      emitter.once('abort', err => {\n        if (!responseStream.destroyed) {\n          responseStream.emit('error', err);\n          responseStream.destroy();\n        }\n      });\n    });\n    emitter.once('abort', err => {\n      reject(err);\n      req.destroy(err);\n    }); // Handle errors\n\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    }); // set tcp keep alive to prevent drop connection by peer\n\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    }); // Handle request timeout\n\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      const timeout = parseInt(config.timeout, 10);\n\n      if (Number.isNaN(timeout)) {\n        reject(new AxiosError('error trying to parse `config.timeout` to int', AxiosError.ERR_BAD_OPTION_VALUE, config, req));\n        return;\n      } // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devouring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n\n\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        if (isDone) return;\n        let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n        const transitional = config.transitional || transitionalDefaults;\n\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        }\n\n        reject(new AxiosError(timeoutErrorMessage, transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, req));\n        abort();\n      });\n    } // Send the request\n\n\n    if (utils.isStream(data)) {\n      let ended = false;\n      let errored = false;\n      data.on('end', () => {\n        ended = true;\n      });\n      data.once('error', err => {\n        errored = true;\n        req.destroy(err);\n      });\n      data.on('close', () => {\n        if (!ended && !errored) {\n          abort(new CanceledError('Request stream has been aborted', config, req));\n        }\n      });\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\nexport const __setProxy = setProxy;","map":{"version":3,"sources":["/Users/pranavvuddagiri/Desktop/minorhome/node_modules/axios/lib/adapters/http.js"],"names":["utils","settle","buildFullPath","buildURL","getProxyForUrl","http","https","util","followRedirects","zlib","VERSION","transitionalDefaults","AxiosError","CanceledError","platform","fromDataURI","stream","AxiosHeaders","AxiosTransformStream","EventEmitter","formDataToStream","readBlob","ZlibHeaderTransformStream","callbackify","zlibOptions","flush","constants","Z_SYNC_FLUSH","finishFlush","brotliOptions","BROTLI_OPERATION_FLUSH","isBrotliSupported","isFunction","createBrotliDecompress","httpFollow","httpsFollow","isHttps","supportedProtocols","protocols","map","protocol","dispatchBeforeRedirect","options","beforeRedirects","proxy","config","setProxy","configProxy","location","proxyUrl","URL","username","auth","password","base64","Buffer","from","toString","headers","host","hostname","port","proxyHost","path","includes","beforeRedirect","redirectOptions","href","isHttpAdapterSupported","process","kindOf","wrapAsync","asyncExecutor","Promise","resolve","reject","onDone","isDone","done","value","isRejected","_resolve","_reject","reason","onDoneHandler","catch","resolveFamily","address","family","isString","TypeError","indexOf","buildAddressEntry","isObject","httpAdapter","dispatchHttpRequest","data","lookup","responseType","responseEncoding","method","toUpperCase","rejected","req","_lookup","isArray","opt","cb","err","arg0","arg1","addresses","addr","all","emitter","onFinished","cancelToken","unsubscribe","abort","signal","removeEventListener","removeAllListeners","emit","type","once","subscribe","aborted","addEventListener","fullPath","baseURL","url","parsed","convertedData","status","statusText","Blob","env","ERR_BAD_REQUEST","stripBOM","Readable","normalize","set","onDownloadProgress","onUploadProgress","maxRate","maxUploadRate","undefined","maxDownloadRate","isSpecCompliantForm","userBoundary","getContentType","formHeaders","tag","boundary","isFormData","getHeaders","hasContentLength","knownLength","promisify","getLength","call","Number","isFinite","setContentLength","e","isBlob","size","setContentType","isStream","isBuffer","isArrayBuffer","Uint8Array","length","maxBodyLength","contentLength","toFiniteNumber","getContentLength","objectMode","pipeline","noop","on","progress","Object","assign","upload","urlUsername","urlPassword","delete","pathname","search","params","paramsSerializer","replace","customErr","Error","message","exists","toJSON","agents","httpAgent","httpsAgent","isUndefined","socketPath","transport","isHttpsRequest","test","agent","maxRedirects","Infinity","insecureHTTPParser","request","handleResponse","res","destroyed","streams","responseLength","transformStream","download","push","responseStream","lastRequest","decompress","statusCode","toLowerCase","createUnzip","offListeners","finished","response","statusMessage","responseBuffer","totalResponseBytes","handleStreamData","chunk","maxContentLength","destroy","ERR_BAD_RESPONSE","handlerStreamAborted","handleStreamError","handleStreamEnd","responseData","concat","handleRequestError","handleRequestSocket","socket","setKeepAlive","timeout","parseInt","isNaN","ERR_BAD_OPTION_VALUE","setTimeout","handleRequestTimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","ECONNABORTED","ended","errored","pipe","end","__setProxy"],"mappings":"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","sourcesContent":["'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport buildURL from './../helpers/buildURL.js';\nimport {getProxyForUrl} from 'proxy-from-env';\nimport http from 'http';\nimport https from 'https';\nimport util from 'util';\nimport followRedirects from 'follow-redirects';\nimport zlib from 'zlib';\nimport {VERSION} from '../env/data.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport platform from '../platform/index.js';\nimport fromDataURI from '../helpers/fromDataURI.js';\nimport stream from 'stream';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport AxiosTransformStream from '../helpers/AxiosTransformStream.js';\nimport EventEmitter from 'events';\nimport formDataToStream from \"../helpers/formDataToStream.js\";\nimport readBlob from \"../helpers/readBlob.js\";\nimport ZlibHeaderTransformStream from '../helpers/ZlibHeaderTransformStream.js';\nimport callbackify from \"../helpers/callbackify.js\";\n\nconst zlibOptions = {\n  flush: zlib.constants.Z_SYNC_FLUSH,\n  finishFlush: zlib.constants.Z_SYNC_FLUSH\n};\n\nconst brotliOptions = {\n  flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n  finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH\n}\n\nconst isBrotliSupported = utils.isFunction(zlib.createBrotliDecompress);\n\nconst {http: httpFollow, https: httpsFollow} = followRedirects;\n\nconst isHttps = /https:?/;\n\nconst supportedProtocols = platform.protocols.map(protocol => {\n  return protocol + ':';\n});\n\n/**\n * If the proxy or config beforeRedirects functions are defined, call them with the options\n * object.\n *\n * @param {Object<string, any>} options - The options object that was passed to the request.\n *\n * @returns {Object<string, any>}\n */\nfunction dispatchBeforeRedirect(options) {\n  if (options.beforeRedirects.proxy) {\n    options.beforeRedirects.proxy(options);\n  }\n  if (options.beforeRedirects.config) {\n    options.beforeRedirects.config(options);\n  }\n}\n\n/**\n * If the proxy or config afterRedirects functions are defined, call them with the options\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} configProxy configuration from Axios options object\n * @param {string} location\n *\n * @returns {http.ClientRequestArgs}\n */\nfunction setProxy(options, configProxy, location) {\n  let proxy = configProxy;\n  if (!proxy && proxy !== false) {\n    const proxyUrl = getProxyForUrl(location);\n    if (proxyUrl) {\n      proxy = new URL(proxyUrl);\n    }\n  }\n  if (proxy) {\n    // Basic proxy authorization\n    if (proxy.username) {\n      proxy.auth = (proxy.username || '') + ':' + (proxy.password || '');\n    }\n\n    if (proxy.auth) {\n      // Support proxy auth object form\n      if (proxy.auth.username || proxy.auth.password) {\n        proxy.auth = (proxy.auth.username || '') + ':' + (proxy.auth.password || '');\n      }\n      const base64 = Buffer\n        .from(proxy.auth, 'utf8')\n        .toString('base64');\n      options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n    }\n\n    options.headers.host = options.hostname + (options.port ? ':' + options.port : '');\n    const proxyHost = proxy.hostname || proxy.host;\n    options.hostname = proxyHost;\n    // Replace 'host' since options is not a URL object\n    options.host = proxyHost;\n    options.port = proxy.port;\n    options.path = location;\n    if (proxy.protocol) {\n      options.protocol = proxy.protocol.includes(':') ? proxy.protocol : `${proxy.protocol}:`;\n    }\n  }\n\n  options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {\n    // Configure proxy for redirected request, passing the original config proxy to apply\n    // the exact same logic as if the redirected request was performed by axios directly.\n    setProxy(redirectOptions, configProxy, redirectOptions.href);\n  };\n}\n\nconst isHttpAdapterSupported = typeof process !== 'undefined' && utils.kindOf(process) === 'process';\n\n// temporary hotfix\n\nconst wrapAsync = (asyncExecutor) => {\n  return new Promise((resolve, reject) => {\n    let onDone;\n    let isDone;\n\n    const done = (value, isRejected) => {\n      if (isDone) return;\n      isDone = true;\n      onDone && onDone(value, isRejected);\n    }\n\n    const _resolve = (value) => {\n      done(value);\n      resolve(value);\n    };\n\n    const _reject = (reason) => {\n      done(reason, true);\n      reject(reason);\n    }\n\n    asyncExecutor(_resolve, _reject, (onDoneHandler) => (onDone = onDoneHandler)).catch(_reject);\n  })\n};\n\nconst resolveFamily = ({address, family}) => {\n  if (!utils.isString(address)) {\n    throw TypeError('address must be a string');\n  }\n  return ({\n    address,\n    family: family || (address.indexOf('.') < 0 ? 6 : 4)\n  });\n}\n\nconst buildAddressEntry = (address, family) => resolveFamily(utils.isObject(address) ? address : {address, family});\n\n/*eslint consistent-return:0*/\nexport default isHttpAdapterSupported && function httpAdapter(config) {\n  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data, lookup, family} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup) {\n      const _lookup = callbackify(lookup, (value) => utils.isArray(value) ? value : [value]);\n      // hotfix to support opt.all option which is required for node 20.x\n      lookup = (hostname, opt, cb) => {\n        _lookup(hostname, opt, (err, arg0, arg1) => {\n          const addresses = utils.isArray(arg0) ? arg0.map(addr => buildAddressEntry(addr)) : [buildAddressEntry(arg0, arg1)];\n\n          opt.all ? cb(err, addresses) : cb(err, addresses[0].address, addresses[0].family);\n        });\n      }\n    }\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', abort);\n      }\n\n      emitter.removeAllListeners();\n    }\n\n    onDone((value, isRejected) => {\n      isDone = true;\n      if (isRejected) {\n        rejected = true;\n        onFinished();\n      }\n    });\n\n    function abort(reason) {\n      emitter.emit('abort', !reason || reason.type ? new CanceledError(null, config, req) : reason);\n    }\n\n    emitter.once('abort', reject);\n\n    if (config.cancelToken || config.signal) {\n      config.cancelToken && config.cancelToken.subscribe(abort);\n      if (config.signal) {\n        config.signal.aborted ? abort() : config.signal.addEventListener('abort', abort);\n      }\n    }\n\n    // Parse url\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    const parsed = new URL(fullPath, 'http://localhost');\n    const protocol = parsed.protocol || supportedProtocols[0];\n\n    if (protocol === 'data:') {\n      let convertedData;\n\n      if (method !== 'GET') {\n        return settle(resolve, reject, {\n          status: 405,\n          statusText: 'method not allowed',\n          headers: {},\n          config\n        });\n      }\n\n      try {\n        convertedData = fromDataURI(config.url, responseType === 'blob', {\n          Blob: config.env && config.env.Blob\n        });\n      } catch (err) {\n        throw AxiosError.from(err, AxiosError.ERR_BAD_REQUEST, config);\n      }\n\n      if (responseType === 'text') {\n        convertedData = convertedData.toString(responseEncoding);\n\n        if (!responseEncoding || responseEncoding === 'utf8') {\n          convertedData = utils.stripBOM(convertedData);\n        }\n      } else if (responseType === 'stream') {\n        convertedData = stream.Readable.from(convertedData);\n      }\n\n      return settle(resolve, reject, {\n        data: convertedData,\n        status: 200,\n        statusText: 'OK',\n        headers: new AxiosHeaders(),\n        config\n      });\n    }\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError(\n        'Unsupported protocol ' + protocol,\n        AxiosError.ERR_BAD_REQUEST,\n        config\n      ));\n    }\n\n    const headers = AxiosHeaders.from(config.headers).normalize();\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    // User-Agent is specified; handle case where no UA header is desired\n    // Only set header if it hasn't been set in config\n    headers.set('User-Agent', 'axios/' + VERSION, false);\n\n    const onDownloadProgress = config.onDownloadProgress;\n    const onUploadProgress = config.onUploadProgress;\n    const maxRate = config.maxRate;\n    let maxUploadRate = undefined;\n    let maxDownloadRate = undefined;\n\n    // support for spec compliant FormData objects\n    if (utils.isSpecCompliantForm(data)) {\n      const userBoundary = headers.getContentType(/boundary=([-_\\w\\d]{10,70})/i);\n\n      data = formDataToStream(data, (formHeaders) => {\n        headers.set(formHeaders);\n      }, {\n        tag: `axios-${VERSION}-boundary`,\n        boundary: userBoundary && userBoundary[1] || undefined\n      });\n      // support for https://www.npmjs.com/package/form-data api\n    } else if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      headers.set(data.getHeaders());\n\n      if (!headers.hasContentLength()) {\n        try {\n          const knownLength = await util.promisify(data.getLength).call(data);\n          Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);\n          /*eslint no-empty:0*/\n        } catch (e) {\n        }\n      }\n    } else if (utils.isBlob(data)) {\n      data.size && headers.setContentType(data.type || 'application/octet-stream');\n      headers.setContentLength(data.size || 0);\n      data = stream.Readable.from(readBlob(data));\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers.setContentLength(data.length, false);\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError(\n          'Request body larger than maxBodyLength limit',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n    }\n\n    const contentLength = utils.toFiniteNumber(headers.getContentLength());\n\n    if (utils.isArray(maxRate)) {\n      maxUploadRate = maxRate[0];\n      maxDownloadRate = maxRate[1];\n    } else {\n      maxUploadRate = maxDownloadRate = maxRate;\n    }\n\n    if (data && (onUploadProgress || maxUploadRate)) {\n      if (!utils.isStream(data)) {\n        data = stream.Readable.from(data, {objectMode: false});\n      }\n\n      data = stream.pipeline([data, new AxiosTransformStream({\n        length: contentLength,\n        maxRate: utils.toFiniteNumber(maxUploadRate)\n      })], utils.noop);\n\n      onUploadProgress && data.on('progress', progress => {\n        onUploadProgress(Object.assign(progress, {\n          upload: true\n        }));\n      });\n    }\n\n    // HTTP basic authentication\n    let auth = undefined;\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    if (!auth && parsed.username) {\n      const urlUsername = parsed.username;\n      const urlPassword = parsed.password;\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    auth && headers.delete('authorization');\n\n    let path;\n\n    try {\n      path = buildURL(\n        parsed.pathname + parsed.search,\n        config.params,\n        config.paramsSerializer\n      ).replace(/^\\?/, '');\n    } catch (err) {\n      const customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      return reject(customErr);\n    }\n\n    headers.set(\n      'Accept-Encoding',\n      'gzip, compress, deflate' + (isBrotliSupported ? ', br' : ''), false\n      );\n\n    const options = {\n      path,\n      method: method,\n      headers: headers.toJSON(),\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth,\n      protocol,\n      family,\n      beforeRedirect: dispatchBeforeRedirect,\n      beforeRedirects: {}\n    };\n\n    // cacheable-lookup integration hotfix\n    !utils.isUndefined(lookup) && (options.lookup = lookup);\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n      setProxy(options, config.proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    let transport;\n    const isHttpsRequest = isHttps.test(options.protocol);\n    options.agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsRequest ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      if (config.beforeRedirect) {\n        options.beforeRedirects.config = config.beforeRedirect;\n      }\n      transport = isHttpsRequest ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    } else {\n      // follow-redirects does not skip comparison, so it should always succeed for axios -1 unlimited\n      options.maxBodyLength = Infinity;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    req = transport.request(options, function handleResponse(res) {\n      if (req.destroyed) return;\n\n      const streams = [res];\n\n      const responseLength = +res.headers['content-length'];\n\n      if (onDownloadProgress) {\n        const transformStream = new AxiosTransformStream({\n          length: utils.toFiniteNumber(responseLength),\n          maxRate: utils.toFiniteNumber(maxDownloadRate)\n        });\n\n        onDownloadProgress && transformStream.on('progress', progress => {\n          onDownloadProgress(Object.assign(progress, {\n            download: true\n          }));\n        });\n\n        streams.push(transformStream);\n      }\n\n      // decompress the response body transparently if required\n      let responseStream = res;\n\n      // return the last request in case of redirects\n      const lastRequest = res.req || req;\n\n      // if decompress disabled we should not decompress\n      if (config.decompress !== false && res.headers['content-encoding']) {\n        // if no content, but headers still say that it is encoded,\n        // remove the header not confuse downstream operations\n        if (method === 'HEAD' || res.statusCode === 204) {\n          delete res.headers['content-encoding'];\n        }\n\n        switch ((res.headers['content-encoding'] || '').toLowerCase()) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'x-gzip':\n        case 'compress':\n        case 'x-compress':\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'deflate':\n          streams.push(new ZlibHeaderTransformStream());\n\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'br':\n          if (isBrotliSupported) {\n            streams.push(zlib.createBrotliDecompress(brotliOptions));\n            delete res.headers['content-encoding'];\n          }\n        }\n      }\n\n      responseStream = streams.length > 1 ? stream.pipeline(streams, utils.noop) : streams[0];\n\n      const offListeners = stream.finished(responseStream, () => {\n        offListeners();\n        onFinished();\n      });\n\n      const response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: new AxiosHeaders(res.headers),\n        config,\n        request: lastRequest\n      };\n\n      if (responseType === 'stream') {\n        response.data = responseStream;\n        settle(resolve, reject, response);\n      } else {\n        const responseBuffer = [];\n        let totalResponseBytes = 0;\n\n        responseStream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destroy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            responseStream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n\n        responseStream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          const err = new AxiosError(\n            'maxContentLength size of ' + config.maxContentLength + ' exceeded',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          );\n          responseStream.destroy(err);\n          reject(err);\n        });\n\n        responseStream.on('error', function handleStreamError(err) {\n          if (req.destroyed) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n\n        responseStream.on('end', function handleStreamEnd() {\n          try {\n            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (responseType !== 'arraybuffer') {\n              responseData = responseData.toString(responseEncoding);\n              if (!responseEncoding || responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            return reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n\n      emitter.once('abort', err => {\n        if (!responseStream.destroyed) {\n          responseStream.emit('error', err);\n          responseStream.destroy();\n        }\n      });\n    });\n\n    emitter.once('abort', err => {\n      reject(err);\n      req.destroy(err);\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      const timeout = parseInt(config.timeout, 10);\n\n      if (Number.isNaN(timeout)) {\n        reject(new AxiosError(\n          'error trying to parse `config.timeout` to int',\n          AxiosError.ERR_BAD_OPTION_VALUE,\n          config,\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devouring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        if (isDone) return;\n        let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n        const transitional = config.transitional || transitionalDefaults;\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        }\n        reject(new AxiosError(\n          timeoutErrorMessage,\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n        abort();\n      });\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      let ended = false;\n      let errored = false;\n\n      data.on('end', () => {\n        ended = true;\n      });\n\n      data.once('error', err => {\n        errored = true;\n        req.destroy(err);\n      });\n\n      data.on('close', () => {\n        if (!ended && !errored) {\n          abort(new CanceledError('Request stream has been aborted', config, req));\n        }\n      });\n\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n}\n\nexport const __setProxy = setProxy;\n"]},"metadata":{},"sourceType":"module"}
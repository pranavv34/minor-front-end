{"ast":null,"code":"\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef, useContext, useMemo } from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { devUseWarning } from '../_util/warning';\nimport Badge from '../badge';\nimport { ConfigContext } from '../config-provider';\nimport Tooltip from '../tooltip';\nimport FloatButtonGroupContext from './context';\nimport Content from './FloatButtonContent';\nimport useStyle from './style';\nexport const floatButtonPrefixCls = 'float-btn';\nconst FloatButton = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    rootClassName,\n    type = 'default',\n    shape = 'circle',\n    icon,\n    description,\n    tooltip,\n    badge = {}\n  } = props,\n        restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"type\", \"shape\", \"icon\", \"description\", \"tooltip\", \"badge\"]);\n\n  const {\n    getPrefixCls,\n    direction\n  } = useContext(ConfigContext);\n  const groupShape = useContext(FloatButtonGroupContext);\n  const prefixCls = getPrefixCls(floatButtonPrefixCls, customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergeShape = groupShape || shape;\n  const classString = classNames(hashId, prefixCls, className, rootClassName, `${prefixCls}-${type}`, `${prefixCls}-${mergeShape}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }); // 虽然在 ts 中已经 omit 过了，但是为了防止多余的属性被透传进来，这里再 omit 一遍，以防万一\n\n  const badgeProps = useMemo(() => omit(badge, ['title', 'children', 'status', 'text']), [badge]);\n  const contentProps = useMemo(() => ({\n    prefixCls,\n    description,\n    icon,\n    type\n  }), [prefixCls, description, icon, type]);\n  let buttonNode = /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-body`\n  }, /*#__PURE__*/React.createElement(Content, Object.assign({}, contentProps)));\n\n  if ('badge' in props) {\n    buttonNode = /*#__PURE__*/React.createElement(Badge, Object.assign({}, badgeProps), buttonNode);\n  }\n\n  if ('tooltip' in props) {\n    buttonNode = /*#__PURE__*/React.createElement(Tooltip, {\n      title: tooltip,\n      placement: direction === 'rtl' ? 'right' : 'left'\n    }, buttonNode);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('FloatButton');\n    process.env.NODE_ENV !== \"production\" ? warning(!(shape === 'circle' && description), 'usage', 'supported only when `shape` is `square`. Due to narrow space for text, short sentence is recommended.') : void 0;\n  }\n\n  return wrapSSR(props.href ? /*#__PURE__*/React.createElement(\"a\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: classString\n  }), buttonNode) : /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: classString,\n    type: \"button\"\n  }), buttonNode));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  FloatButton.displayName = 'FloatButton';\n}\n\nexport default FloatButton;","map":{"version":3,"sources":["/Users/pranavvuddagiri/Desktop/minorhome2/node_modules/antd/es/float-button/FloatButton.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","forwardRef","useContext","useMemo","classNames","omit","devUseWarning","Badge","ConfigContext","Tooltip","FloatButtonGroupContext","Content","useStyle","floatButtonPrefixCls","FloatButton","props","ref","prefixCls","customizePrefixCls","className","rootClassName","type","shape","icon","description","tooltip","badge","restProps","getPrefixCls","direction","groupShape","wrapSSR","hashId","mergeShape","classString","badgeProps","contentProps","buttonNode","createElement","assign","title","placement","process","env","NODE_ENV","warning","href","displayName"],"mappings":"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","sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { forwardRef, useContext, useMemo } from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { devUseWarning } from '../_util/warning';\nimport Badge from '../badge';\nimport { ConfigContext } from '../config-provider';\nimport Tooltip from '../tooltip';\nimport FloatButtonGroupContext from './context';\nimport Content from './FloatButtonContent';\nimport useStyle from './style';\nexport const floatButtonPrefixCls = 'float-btn';\nconst FloatButton = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      type = 'default',\n      shape = 'circle',\n      icon,\n      description,\n      tooltip,\n      badge = {}\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"type\", \"shape\", \"icon\", \"description\", \"tooltip\", \"badge\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = useContext(ConfigContext);\n  const groupShape = useContext(FloatButtonGroupContext);\n  const prefixCls = getPrefixCls(floatButtonPrefixCls, customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mergeShape = groupShape || shape;\n  const classString = classNames(hashId, prefixCls, className, rootClassName, `${prefixCls}-${type}`, `${prefixCls}-${mergeShape}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  });\n  // 虽然在 ts 中已经 omit 过了，但是为了防止多余的属性被透传进来，这里再 omit 一遍，以防万一\n  const badgeProps = useMemo(() => omit(badge, ['title', 'children', 'status', 'text']), [badge]);\n  const contentProps = useMemo(() => ({\n    prefixCls,\n    description,\n    icon,\n    type\n  }), [prefixCls, description, icon, type]);\n  let buttonNode = /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-body`\n  }, /*#__PURE__*/React.createElement(Content, Object.assign({}, contentProps)));\n  if ('badge' in props) {\n    buttonNode = /*#__PURE__*/React.createElement(Badge, Object.assign({}, badgeProps), buttonNode);\n  }\n  if ('tooltip' in props) {\n    buttonNode = /*#__PURE__*/React.createElement(Tooltip, {\n      title: tooltip,\n      placement: direction === 'rtl' ? 'right' : 'left'\n    }, buttonNode);\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('FloatButton');\n    process.env.NODE_ENV !== \"production\" ? warning(!(shape === 'circle' && description), 'usage', 'supported only when `shape` is `square`. Due to narrow space for text, short sentence is recommended.') : void 0;\n  }\n  return wrapSSR(props.href ? ( /*#__PURE__*/React.createElement(\"a\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: classString\n  }), buttonNode)) : ( /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: classString,\n    type: \"button\"\n  }), buttonNode)));\n});\nif (process.env.NODE_ENV !== 'production') {\n  FloatButton.displayName = 'FloatButton';\n}\nexport default FloatButton;"]},"metadata":{},"sourceType":"module"}
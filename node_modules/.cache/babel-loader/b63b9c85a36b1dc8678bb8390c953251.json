{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { CONTAINER_MAX_OFFSET } from '../../_util/hooks/useZIndex';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\nimport genStackStyle from './stack';\nexport const genNoticeStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize,\n    colorText\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  return {\n    position: 'relative',\n    marginBottom: notificationMarginBottom,\n    marginInlineStart: 'auto',\n    background: notificationBg,\n    borderRadius: borderRadiusLG,\n    boxShadow,\n    [noticeCls]: {\n      padding: notificationPadding,\n      width,\n      maxWidth: `calc(100vw - ${notificationMarginEdge * 2}px)`,\n      overflow: 'hidden',\n      lineHeight,\n      wordWrap: 'break-word'\n    },\n    [`${componentCls}-close-icon`]: {\n      fontSize,\n      cursor: 'pointer'\n    },\n    [`${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      color: colorTextHeading,\n      fontSize: fontSizeLG,\n      lineHeight: token.lineHeightLG\n    },\n    [`${noticeCls}-description`]: {\n      fontSize,\n      color: colorText\n    },\n    [`&${noticeCls}-closable ${noticeCls}-message`]: {\n      paddingInlineEnd: token.paddingLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      marginInlineStart: token.marginSM + notificationIconSize,\n      fontSize: fontSizeLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n      marginInlineStart: token.marginSM + notificationIconSize,\n      fontSize\n    },\n    // Icon & color style in different selector level\n    // https://github.com/ant-design/ant-design/issues/16503\n    // https://github.com/ant-design/ant-design/issues/15512\n    [`${noticeCls}-icon`]: {\n      position: 'absolute',\n      fontSize: notificationIconSize,\n      lineHeight: 0,\n      // icon-font\n      [`&-success${iconCls}`]: {\n        color: colorSuccess\n      },\n      [`&-info${iconCls}`]: {\n        color: colorInfo\n      },\n      [`&-warning${iconCls}`]: {\n        color: colorWarning\n      },\n      [`&-error${iconCls}`]: {\n        color: colorError\n      }\n    },\n    [`${noticeCls}-close`]: {\n      position: 'absolute',\n      top: token.notificationPaddingVertical,\n      insetInlineEnd: token.notificationPaddingHorizontal,\n      color: token.colorIcon,\n      outline: 'none',\n      width: token.notificationCloseButtonSize,\n      height: token.notificationCloseButtonSize,\n      borderRadius: token.borderRadiusSM,\n      transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        color: token.colorIconHover,\n        backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n      }\n    },\n    [`${noticeCls}-btn`]: {\n      float: 'right',\n      marginTop: token.marginSM\n    }\n  };\n};\n\nconst genNotificationStyle = token => {\n  const {\n    componentCls,\n    // .ant-notification\n    notificationMarginBottom,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const fadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  return [// ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginRight: {\n        value: notificationMarginEdge,\n        _skip_check_: true\n      },\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      //  animation\n      [`${componentCls}-fade-appear-prepare`]: {\n        opacity: '0 !important'\n      },\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: fadeOut,\n        animationPlayState: 'running'\n      },\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${noticeCls}-btn`]: {\n          float: 'left'\n        }\n      }\n    })\n  }, // ============================ Notice ============================\n  {\n    [componentCls]: {\n      [`${noticeCls}-wrapper`]: Object.assign({}, genNoticeStyle(token))\n    }\n  }];\n}; // ============================== Export ==============================\n\n\nexport const prepareComponentToken = token => ({\n  zIndexPopup: token.zIndexPopupBase + CONTAINER_MAX_OFFSET + 50,\n  width: 384\n});\nexport const prepareNotificationToken = token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = mergeToken(token, {\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    notificationIconSize: token.fontSizeLG * token.lineHeightLG,\n    notificationCloseButtonSize: token.controlHeightLG * 0.55,\n    notificationMarginBottom: token.margin,\n    notificationPadding: `${token.paddingMD}px ${token.paddingContentHorizontalLG}px`,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150,\n    notificationStackLayer: 3\n  });\n  return notificationToken;\n};\nexport default genComponentStyleHook('Notification', token => {\n  const notificationToken = prepareNotificationToken(token);\n  return [genNotificationStyle(notificationToken), genNotificationPlacementStyle(notificationToken), genStackStyle(notificationToken)];\n}, prepareComponentToken);","map":{"version":3,"sources":["/Users/pranavvuddagiri/Desktop/minorhome/node_modules/antd/es/notification/style/index.js"],"names":["Keyframes","CONTAINER_MAX_OFFSET","resetComponent","genComponentStyleHook","mergeToken","genNotificationPlacementStyle","genStackStyle","genNoticeStyle","token","iconCls","componentCls","boxShadow","fontSizeLG","notificationMarginBottom","borderRadiusLG","colorSuccess","colorInfo","colorWarning","colorError","colorTextHeading","notificationBg","notificationPadding","notificationMarginEdge","fontSize","lineHeight","width","notificationIconSize","colorText","noticeCls","position","marginBottom","marginInlineStart","background","borderRadius","padding","maxWidth","overflow","wordWrap","cursor","marginXS","color","lineHeightLG","paddingInlineEnd","paddingLG","marginSM","top","notificationPaddingVertical","insetInlineEnd","notificationPaddingHorizontal","colorIcon","outline","notificationCloseButtonSize","height","borderRadiusSM","transition","motionDurationMid","display","alignItems","justifyContent","colorIconHover","backgroundColor","wireframe","colorFillContent","float","marginTop","genNotificationStyle","motionEaseInOut","fadeOut","maxHeight","animationMaxHeight","paddingTop","paddingBottom","opacity","Object","assign","zIndex","zIndexPopup","marginRight","value","_skip_check_","animationDuration","animationTimingFunction","animationFillMode","animationPlayState","animationName","direction","prepareComponentToken","zIndexPopupBase","prepareNotificationToken","paddingMD","notificationToken","colorBgElevated","controlHeightLG","margin","paddingContentHorizontalLG","marginLG","notificationStackLayer"],"mappings":"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","sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { CONTAINER_MAX_OFFSET } from '../../_util/hooks/useZIndex';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport genNotificationPlacementStyle from './placement';\nimport genStackStyle from './stack';\nexport const genNoticeStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize,\n    colorText\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  return {\n    position: 'relative',\n    marginBottom: notificationMarginBottom,\n    marginInlineStart: 'auto',\n    background: notificationBg,\n    borderRadius: borderRadiusLG,\n    boxShadow,\n    [noticeCls]: {\n      padding: notificationPadding,\n      width,\n      maxWidth: `calc(100vw - ${notificationMarginEdge * 2}px)`,\n      overflow: 'hidden',\n      lineHeight,\n      wordWrap: 'break-word'\n    },\n    [`${componentCls}-close-icon`]: {\n      fontSize,\n      cursor: 'pointer'\n    },\n    [`${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      color: colorTextHeading,\n      fontSize: fontSizeLG,\n      lineHeight: token.lineHeightLG\n    },\n    [`${noticeCls}-description`]: {\n      fontSize,\n      color: colorText\n    },\n    [`&${noticeCls}-closable ${noticeCls}-message`]: {\n      paddingInlineEnd: token.paddingLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      marginInlineStart: token.marginSM + notificationIconSize,\n      fontSize: fontSizeLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n      marginInlineStart: token.marginSM + notificationIconSize,\n      fontSize\n    },\n    // Icon & color style in different selector level\n    // https://github.com/ant-design/ant-design/issues/16503\n    // https://github.com/ant-design/ant-design/issues/15512\n    [`${noticeCls}-icon`]: {\n      position: 'absolute',\n      fontSize: notificationIconSize,\n      lineHeight: 0,\n      // icon-font\n      [`&-success${iconCls}`]: {\n        color: colorSuccess\n      },\n      [`&-info${iconCls}`]: {\n        color: colorInfo\n      },\n      [`&-warning${iconCls}`]: {\n        color: colorWarning\n      },\n      [`&-error${iconCls}`]: {\n        color: colorError\n      }\n    },\n    [`${noticeCls}-close`]: {\n      position: 'absolute',\n      top: token.notificationPaddingVertical,\n      insetInlineEnd: token.notificationPaddingHorizontal,\n      color: token.colorIcon,\n      outline: 'none',\n      width: token.notificationCloseButtonSize,\n      height: token.notificationCloseButtonSize,\n      borderRadius: token.borderRadiusSM,\n      transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        color: token.colorIconHover,\n        backgroundColor: token.wireframe ? 'transparent' : token.colorFillContent\n      }\n    },\n    [`${noticeCls}-btn`]: {\n      float: 'right',\n      marginTop: token.marginSM\n    }\n  };\n};\nconst genNotificationStyle = token => {\n  const {\n    componentCls,\n    // .ant-notification\n    notificationMarginBottom,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const fadeOut = new Keyframes('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  return [\n  // ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginRight: {\n        value: notificationMarginEdge,\n        _skip_check_: true\n      },\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      //  animation\n      [`${componentCls}-fade-appear-prepare`]: {\n        opacity: '0 !important'\n      },\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: fadeOut,\n        animationPlayState: 'running'\n      },\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${noticeCls}-btn`]: {\n          float: 'left'\n        }\n      }\n    })\n  },\n  // ============================ Notice ============================\n  {\n    [componentCls]: {\n      [`${noticeCls}-wrapper`]: Object.assign({}, genNoticeStyle(token))\n    }\n  }];\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => ({\n  zIndexPopup: token.zIndexPopupBase + CONTAINER_MAX_OFFSET + 50,\n  width: 384\n});\nexport const prepareNotificationToken = token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = mergeToken(token, {\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    notificationIconSize: token.fontSizeLG * token.lineHeightLG,\n    notificationCloseButtonSize: token.controlHeightLG * 0.55,\n    notificationMarginBottom: token.margin,\n    notificationPadding: `${token.paddingMD}px ${token.paddingContentHorizontalLG}px`,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150,\n    notificationStackLayer: 3\n  });\n  return notificationToken;\n};\nexport default genComponentStyleHook('Notification', token => {\n  const notificationToken = prepareNotificationToken(token);\n  return [genNotificationStyle(notificationToken), genNotificationPlacementStyle(notificationToken), genStackStyle(notificationToken)];\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}